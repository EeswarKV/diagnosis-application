[{"/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/index.js":"1","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/reportWebVitals.js":"2","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/App.js":"3","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/home/home.js":"4","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/header/header.js":"5","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/history/history.js":"6","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/testreport/testreport.js":"7"},{"size":552,"mtime":1611603892210,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1609971483000,"results":"10","hashOfConfig":"9"},{"size":602,"mtime":1611607005169,"results":"11","hashOfConfig":"9"},{"size":1189,"mtime":1611610725812,"results":"12","hashOfConfig":"9"},{"size":992,"mtime":1611611068786,"results":"13","hashOfConfig":"9"},{"size":1262,"mtime":1611622774907,"results":"14","hashOfConfig":"9"},{"size":2488,"mtime":1611622332251,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1il2998",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/index.js",[],["33","34"],"/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/reportWebVitals.js",[],"/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/App.js",[],"/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/home/home.js",["35","36","37"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Card } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport './home.css';\n\nexport default function Home() { \n    const [loaded, setLoaded] = useState(false);\n    const [data, setData] = useState({ tests: [] });\n    const history = useHistory(); \n\n    useEffect(() => {\n        let isSubscribed = true;\n            fetch(\"http://localhost:8001/api/v1/diagnostics/tests\")\n            .then(response => response.json())\n            .then(data => {\n                setData(data);\n                setLoaded(true);\n                console.log(\"data\", data);\n            });\n            return () => (isSubscribed = false)\n    }, []);\n\n    function navigateTo(testreport) { \n        return history.push('/testreport',testreport);\n    }\n\n    return (\n        <div>\n            {data && data.tests.map(test => { \n                return (\n                    <>\n                        <Card bg=\"secondary\" text=\"white\" className=\"text-center card\" body onClick={ () => navigateTo(test)}><span>{test.category}</span></Card>\n                    </>\n                );\n            })}\n        </div>\n    )\n}","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/header/header.js",["38","39","40"],"import React, { useState, useEffect } from \"react\";\nimport logo from \"../assets/logo.png\";\nimport \"./header.css\";\nimport Hamburger from 'hamburger-react'\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n} from \"react-router-dom\";\n\nexport default function Header() {\n  const [click, setClick] = useState(false);\n  const closeMobileMenu = () => setClick(false);\n\n  return (\n    <div className=\"header\">\n      <div className=\"logo-nav\">\n        <div className=\"logo-container\">\n            <Link to=\"/\"><img src={logo} className=\"logo\" alt=\"logo\" onClick={closeMobileMenu}/> </Link>\n        </div>\n      </div>\n      <ul className={click ? \"nav-options active\" : \"nav-options\"}>\n        <li className=\"sign-in\" onClick={closeMobileMenu}>\n          <Link to=\"/\">Home </Link>\n        </li>\n        <li className=\"sign-in\" onClick={closeMobileMenu}>\n          <Link to=\"/history\">History </Link>\n        </li>\n      </ul>\n      <Hamburger toggled={click} toggle={setClick} />\n    </div>\n  );\n}\n","/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/history/history.js",[],"/Users/lt96mr/Downloads/react-interview-master/diagnostics/src/components/testreport/testreport.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":16},{"ruleId":"45","severity":1,"message":"49","line":7,"column":12,"nodeType":"47","messageId":"48","endLine":7,"endColumn":18},{"ruleId":"45","severity":1,"message":"50","line":20,"column":27,"nodeType":"47","messageId":"48","endLine":20,"endColumn":39},{"ruleId":"45","severity":1,"message":"51","line":1,"column":27,"nodeType":"47","messageId":"48","endLine":1,"endColumn":36},{"ruleId":"45","severity":1,"message":"52","line":6,"column":20,"nodeType":"47","messageId":"48","endLine":6,"endColumn":26},{"ruleId":"45","severity":1,"message":"53","line":8,"column":3,"nodeType":"47","messageId":"48","endLine":8,"endColumn":8},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'loaded' is assigned a value but never used.","'isSubscribed' is assigned a value but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","no-global-assign","no-unsafe-negation"]